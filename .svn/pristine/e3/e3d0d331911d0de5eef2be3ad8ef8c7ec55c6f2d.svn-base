<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>liblinphone: Miscenalleous: logs, version strings, config storage</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">liblinphone
   &#160;<span id="projectnumber">3.5.99.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Miscenalleous: logs, version strings, config storage</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga047b6550aab7dd244268e695fab98fd6"><td class="memItemLeft" align="right" valign="top">typedef struct _LpConfig&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad70dc5268366c829238b458547fe5277"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gad70dc5268366c829238b458547fe5277">linphone_core_enable_logs</a> (FILE *file)</td></tr>
<tr class="memitem:gad7314fd936348037a14ba56cd2e9093e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gad7314fd936348037a14ba56cd2e9093e">linphone_core_enable_logs_with_cb</a> (OrtpLogFunc logfunc)</td></tr>
<tr class="memitem:gaac81b36333b8dcda6d029fd62720fae8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gaac81b36333b8dcda6d029fd62720fae8">linphone_core_disable_logs</a> ()</td></tr>
<tr class="memitem:ga553b61ad32d7455ce69102025d383f90"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga553b61ad32d7455ce69102025d383f90">linphone_core_get_version</a> (void)</td></tr>
<tr class="memitem:gae5adf09d448504db1338b9cb8505adc5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gae5adf09d448504db1338b9cb8505adc5">linphone_core_set_user_agent</a> (<a class="el" href="group__initializing.html#gaa5cf635b82dd338e7ee2dd3599d05f0a">LinphoneCore</a> *lc, const char *name, const char *ver)</td></tr>
<tr class="memitem:ga0634038b0304863380c65d6743448cab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga0634038b0304863380c65d6743448cab">linphone_core_get_config</a> (<a class="el" href="group__initializing.html#gaa5cf635b82dd338e7ee2dd3599d05f0a">LinphoneCore</a> *lc)</td></tr>
<tr class="memitem:gadf2204eb2ab519f7b40be868387b9e3a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gadf2204eb2ab519f7b40be868387b9e3a">linphone_dial_plan_lookup_ccc_from_iso</a> (const char *iso)</td></tr>
<tr class="memitem:ga38c2e82076bbde91124ae8867320a43c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga38c2e82076bbde91124ae8867320a43c">linphone_dial_plan_lookup_ccc_from_e164</a> (const char *e164)</td></tr>
<tr class="memitem:ga9657ebf1d68b43184a796c9bdc68c29a"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga9657ebf1d68b43184a796c9bdc68c29a">lp_config_get_string</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, const char *default_string)</td></tr>
<tr class="memitem:gacce3e95a4b8327d6a8a5f162cbccb5fe"><td class="memItemLeft" align="right" valign="top">bool_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gacce3e95a4b8327d6a8a5f162cbccb5fe">lp_config_get_range</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int *min, int *max, int default_min, int default_max)</td></tr>
<tr class="memitem:ga36d08c0cbc78d88fd4f043e61e9b9637"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga36d08c0cbc78d88fd4f043e61e9b9637">lp_config_get_int</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int default_value)</td></tr>
<tr class="memitem:ga541795495eae7e7b7cde85beb096e20c"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga541795495eae7e7b7cde85beb096e20c">lp_config_get_int64</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int64_t default_value)</td></tr>
<tr class="memitem:gad548422b00d41c9726062869d04cd6e4"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gad548422b00d41c9726062869d04cd6e4">lp_config_get_float</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, float default_value)</td></tr>
<tr class="memitem:ga2b9f058c7b12d124be96149100d9b079"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga2b9f058c7b12d124be96149100d9b079">lp_config_set_string</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, const char *value)</td></tr>
<tr class="memitem:ga21e9df0d054a1e38f85088f3ac8c7f56"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga21e9df0d054a1e38f85088f3ac8c7f56">lp_config_set_range</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int min_value, int max_value)</td></tr>
<tr class="memitem:gab7608c4c6b40a734eb00a4b398e47ba5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gab7608c4c6b40a734eb00a4b398e47ba5">lp_config_set_int</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int value)</td></tr>
<tr class="memitem:gac5e9e26edea055a3c5b63cc60c45a695"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gac5e9e26edea055a3c5b63cc60c45a695">lp_config_set_int_hex</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int value)</td></tr>
<tr class="memitem:ga3ce825cbf6fa62ecf0714540459f64b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga3ce825cbf6fa62ecf0714540459f64b4">lp_config_set_int64</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, int64_t value)</td></tr>
<tr class="memitem:gaeaa0ff38f2af3cefdf4c401b86ec9197"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#gaeaa0ff38f2af3cefdf4c401b86ec9197">lp_config_set_float</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, const char *key, float value)</td></tr>
<tr class="memitem:ga39f6f202e10581591ac6e68a636236bc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga39f6f202e10581591ac6e68a636236bc">lp_config_sync</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig)</td></tr>
<tr class="memitem:ga15bf033627637f54ebc03380d5dfb2d1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga15bf033627637f54ebc03380d5dfb2d1">lp_config_has_section</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section)</td></tr>
<tr class="memitem:ga8ea8060c147dd9584644c52d4cd59a17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga8ea8060c147dd9584644c52d4cd59a17">lp_config_clean_section</a> (<a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section)</td></tr>
<tr class="memitem:ga3b8ef5436c281cfe1f79dd3421d0e9af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga3b8ef5436c281cfe1f79dd3421d0e9af">lp_config_for_each_section</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, void(*callback)(const char *section, void *ctx), void *ctx)</td></tr>
<tr class="memitem:ga2595b0b6d2133c44de3664e25f756f2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.html#ga2595b0b6d2133c44de3664e25f756f2f">lp_config_for_each_entry</a> (const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *lpconfig, const char *section, void(*callback)(const char *entry, void *ctx), void *ctx)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga047b6550aab7dd244268e695fab98fd6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct _LpConfig <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The LpConfig object is used to manipulate a configuration file.</p>
<p>The format of the configuration file is a .ini like format:</p>
<ul>
<li>sections are defined in []</li>
<li>each section contains a sequence of key=value pairs.</li>
</ul>
<p>Example: </p>
<div class="fragment"><div class="line">   [sound]</div>
<div class="line">   echocanceler=1</div>
<div class="line">   playback_dev=ALSA: Default device</div>
<div class="line">  </div>
<div class="line">   [video]</div>
<div class="line">   enabled=1</div>
</div><!-- fragment --> 
</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gad70dc5268366c829238b458547fe5277"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void linphone_core_enable_logs </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enable logs in supplied FILE*.</p>
<dl class="params"><dt>Parameters:</dt><dd>
  <table class="params">
    <tr><td class="paramname">file</td><td>a C FILE* where to fprintf logs. If null stdout is used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad7314fd936348037a14ba56cd2e9093e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void linphone_core_enable_logs_with_cb </td>
          <td>(</td>
          <td class="paramtype">OrtpLogFunc&#160;</td>
          <td class="paramname"><em>logfunc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Enable logs through the user's supplied log callback.</p>
<dl class="params"><dt>Parameters:</dt><dd>
  <table class="params">
    <tr><td class="paramname">logfunc</td><td>The address of a OrtpLogFunc callback whose protoype is typedef void (*OrtpLogFunc)(OrtpLogLevel lev, const char *fmt, va_list args); </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaac81b36333b8dcda6d029fd62720fae8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void linphone_core_disable_logs </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Entirely disable logging. </p>

</div>
</div>
<a class="anchor" id="ga553b61ad32d7455ce69102025d383f90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* linphone_core_get_version </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns liblinphone's version as a string. </p>

</div>
</div>
<a class="anchor" id="gae5adf09d448504db1338b9cb8505adc5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void linphone_core_set_user_agent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__initializing.html#gaa5cf635b82dd338e7ee2dd3599d05f0a">LinphoneCore</a> *&#160;</td>
          <td class="paramname"><em>lc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>ver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets the user agent string used in SIP messages. </p>

</div>
</div>
<a class="anchor" id="ga0634038b0304863380c65d6743448cab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a>* linphone_core_get_config </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__initializing.html#gaa5cf635b82dd338e7ee2dd3599d05f0a">LinphoneCore</a> *&#160;</td>
          <td class="paramname"><em>lc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">read</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the LpConfig object used to manage the storage (config) file.</p>
<p>The application can use the LpConfig object to insert its own private sections and pairs of key=value in the configuration file. </p>

</div>
</div>
<a class="anchor" id="gadf2204eb2ab519f7b40be868387b9e3a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int linphone_dial_plan_lookup_ccc_from_iso </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>iso</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>*Function to get call country code from ISO 3166-1 alpha-2 code, ex: FR returns 33 </p>
<dl class="params"><dt>Parameters:</dt><dd>
  <table class="params">
    <tr><td class="paramname">iso</td><td>country code alpha2 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns:</dt><dd>call country code or -1 if not found </dd></dl>

</div>
</div>
<a class="anchor" id="ga38c2e82076bbde91124ae8867320a43c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int linphone_dial_plan_lookup_ccc_from_e164 </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>e164</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>*Function to get call country code from an e164 number, ex: +33952650121 will return 33 </p>
<dl class="params"><dt>Parameters:</dt><dd>
  <table class="params">
    <tr><td class="paramname">e164</td><td>phone number </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns:</dt><dd>call country code or -1 if not found </dd></dl>

</div>
</div>
<a class="anchor" id="ga9657ebf1d68b43184a796c9bdc68c29a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* lp_config_get_string </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>default_string</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a configuration item as a string, given its section, key, and default value.</p>
<p>The default value string is returned if the config item isn't found. </p>

</div>
</div>
<a class="anchor" id="gacce3e95a4b8327d6a8a5f162cbccb5fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool_t lp_config_get_range </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>default_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>default_max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a configuration item as a range, given its section, key, and default min and max values.</p>
<dl class="section return"><dt>Returns:</dt><dd>TRUE if the value is successfully parsed as a range, FALSE otherwise. If FALSE is returned, min and max are filled respectively with default_min and default_max values. </dd></dl>

</div>
</div>
<a class="anchor" id="ga36d08c0cbc78d88fd4f043e61e9b9637"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lp_config_get_int </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>default_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a configuration item as an integer, given its section, key, and default value.</p>
<p>The default integer value is returned if the config item isn't found. </p>

</div>
</div>
<a class="anchor" id="ga541795495eae7e7b7cde85beb096e20c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t lp_config_get_int64 </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>default_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a configuration item as a 64 bit integer, given its section, key, and default value.</p>
<p>The default integer value is returned if the config item isn't found. </p>

</div>
</div>
<a class="anchor" id="gad548422b00d41c9726062869d04cd6e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float lp_config_get_float </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>default_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a configuration item as a float, given its section, key, and default value.</p>
<p>The default float value is returned if the config item isn't found. </p>

</div>
</div>
<a class="anchor" id="ga2b9f058c7b12d124be96149100d9b079"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_string </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a string config item </p>

</div>
</div>
<a class="anchor" id="ga21e9df0d054a1e38f85088f3ac8c7f56"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_range </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>min_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>max_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a range config item </p>

</div>
</div>
<a class="anchor" id="gab7608c4c6b40a734eb00a4b398e47ba5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_int </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets an integer config item </p>

</div>
</div>
<a class="anchor" id="gac5e9e26edea055a3c5b63cc60c45a695"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_int_hex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets an integer config item, but store it as hexadecimal </p>

</div>
</div>
<a class="anchor" id="ga3ce825cbf6fa62ecf0714540459f64b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_int64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a 64 bits integer config item </p>

</div>
</div>
<a class="anchor" id="gaeaa0ff38f2af3cefdf4c401b86ec9197"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_set_float </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets a float config item </p>

</div>
</div>
<a class="anchor" id="ga39f6f202e10581591ac6e68a636236bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lp_config_sync </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Writes the config file to disk. </p>

</div>
</div>
<a class="anchor" id="ga15bf033627637f54ebc03380d5dfb2d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int lp_config_has_section </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns 1 if a given section is present in the configuration. </p>

</div>
</div>
<a class="anchor" id="ga8ea8060c147dd9584644c52d4cd59a17"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_clean_section </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Removes every pair of key,value in a section and remove the section. </p>

</div>
</div>
<a class="anchor" id="ga3b8ef5436c281cfe1f79dd3421d0e9af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_for_each_section </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(const char *section, void *ctx)&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Call a function for each section present in the configuration. </p>

</div>
</div>
<a class="anchor" id="ga2595b0b6d2133c44de3664e25f756f2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void lp_config_for_each_entry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__misc.html#ga047b6550aab7dd244268e695fab98fd6">LpConfig</a> *&#160;</td>
          <td class="paramname"><em>lpconfig</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>section</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(const char *entry, void *ctx)&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ctx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Call a function for each entry present in a section configuration. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Mar 16 2013 16:45:31 for liblinphone by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.1
</small></address>
</body>
</html>
